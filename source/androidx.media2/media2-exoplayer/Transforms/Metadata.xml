<metadata>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text.subrip']/class[@name='SubripSubtitle']"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text.webvtt']/class[@name='WebvttSubtitle']"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text.ttml']/class[@name='TtmlSubtitle']"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text.dvb']/class[@name='DvbSubtitle']"
        name="visibility"
        >
        public
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.video']/interface[@name='VideoRendererEventListener']/method[@name='onVideoSizeChanged' and count(parameter)=4 and parameter[1][@type='int'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='float']]"
        name="managedName"
        >
        VideoRendererSizeChangedEventArgs
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='BaseMediaSource']/method[@name='prepareSourceInternal' and count(parameter)=1 and parameter[1][@type='androidx.media2.exoplayer.external.upstream.TransferListener']]"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='BaseMediaSource']/method[@name='releaseSourceInternal' and count(parameter)=0]"
        name="visibility"
        >
        public
    </attr>

    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.analytics']/class[@name='AnalyticsCollector']/implements"
        />

    <add-node
        path="/api/package[@name='androidx.media2.exoplayer.external.text.dvb']/class[@name='DvbDecoder']"
        >
        <method
            visibility="protected" static="false" abstract="false" return="java.lang.Throwable" name="createUnexpectedDecodeException"
            deprecated="not deprecated" final="false" bridge="false" native="false"
            synchronized="false" synthetic="false"
            >
            <parameter
                type="java.lang.Throwable" name="error"
                >
            </parameter>
        </method>
        <method
            visibility="protected" static="false" abstract="false" return="androidx.media2.exoplayer.external.text.SubtitleInputBuffer" name="createInputBuffer"
            deprecated="not deprecated" final="false" bridge="false" native="false"
            jni-signature="()Landroidx/media2/exoplayer/external/text/SubtitleInputBuffer;" jni-return="Landroidx/media2/exoplayer/external/text/SubtitleInputBuffer;"
            synchronized="false" synthetic="false"
            >
        </method>
        <method
            visibility="protected" static="false" abstract="false" return="androidx.media2.exoplayer.external.text.SubtitleOutputBuffer" name="createOutputBuffer"
            deprecated="not deprecated" final="false" bridge="false" native="false"
            jni-signature="()Landroidx/media2/exoplayer/external/text/SubtitleOutputBuffer;" jni-return="Landroidx/media2/exoplayer/external/text/SubtitleOutputBuffer;"
            synchronized="false" synthetic="false"
            >
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='androidx.media2.exoplayer.external.text.pgs']/class[@name='PgsDecoder']"
        >
        <method
            visibility="protected" static="false" abstract="true" return="java.lang.Throwable" name="createUnexpectedDecodeException"
            deprecated="not deprecated" final="false" bridge="false" native="false"
            synchronized="false" synthetic="false"
            >
            <parameter
                type="java.lang.Throwable" name="error"
                >
            </parameter>
        </method>
    </add-node>

    <add-node
        path="/api/package[@name='androidx.media2.exoplayer.external.drm']/class[@name='DrmInitData']"
        >
        <method
            visibility="public" static="false" abstract="false" return="int" name="Compare"
            native="false" synchronized="false" final="false" deprecated="not deprecated"
            >
            <parameter type="java.lang.Object" name="lhs" />
            <parameter type="java.lang.Object" name="rhs" />
        </method>
    </add-node>

    <add-node
        path="/api/package[@name='androidx.media2.exoplayer.external.offline']/class[@name='StreamKey']"
        >
        <method
            visibility="public" static="false" abstract="false" return="int" name="compareTo"
            native="false" synchronized="false"  final="false" deprecated="not deprecated"
            >
            <parameter name="p0" type="java.lang.Object" />
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ConcatenatingMediaSource']"
        >
        <method
            visibility="public" static="false" abstract="false" return="int" name="compare"
            native="false" synchronized="false" final="false" deprecated="not deprecated"
            >
            <parameter type="java.lang.Object" name="lhs" />
            <parameter type="java.lang.Object" name="rhs" />
        </method>
    </add-node>
    <add-node
        path="/api/package[@name='androidx.media2.exoplayer.external.source.hls.playlist']/class[@name='HlsMediaPlaylist.Segment']"
        >
        <method
            visibility="public" static="false" abstract="false" return="int" name="compare"
            native="false" synchronized="false" final="false" deprecated="not deprecated"
            >
            <parameter type="java.lang.Object" name="lhs" />
            <parameter type="java.lang.Object" name="rhs" />
        </method>
    </add-node>


    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.decoder']/class[@name='SimpleDecoder']"
        />


    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='FixedTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List&lt;? extends androidx.media2.exoplayer.external.source.chunk.MediaChunk&gt;'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[4]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Source.Chunk.MediaChunk.MediaChunk &gt;
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='FixedTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List&lt;? extends androidx.media2.exoplayer.external.source.chunk.MediaChunk&gt;'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[4]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Source.Chunk.MediaChunk.MediaChunk &gt;
    </attr>


    <!--
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.analytics']/interface[@name='AnalyticsListener']/method[@name='onAudioAttributesChanged' and count(parameter)=2 and parameter[1][@type='androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime'] and parameter[2][@type='androidx.media2.exoplayer.external.audio.AudioAttributes']]"
        name="managedName"
        >
        OnAudioAttributesChangedNative
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.analytics']/interface[@name='AnalyticsListener']/method[@name='onAudioSessionId' and count(parameter)=2 and parameter[1][@type='androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime'] and parameter[2][@type='int']]"
        name="managedName"
        >
        OnAudioSessionIdNative
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.analytics']/interface[@name='AnalyticsListener']/method[@name='onSurfaceSizeChanged' and count(parameter)=3 and parameter[1][@type='androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
        name="managedName"
        >
        OnSurfaceSizeChangedNative
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.analytics']/interface[@name='AnalyticsListener']/method[@name='onRenderedFirstFrame' and count(parameter)=2 and parameter[1][@type='androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime'] and parameter[2][@type='android.view.Surface']]"
        name="managedName"
        >
        OnRenderedFirstFrameNative
    </attr>
    -->

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='FixedTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List&lt;? extends androidx.media2.exoplayer.external.source.chunk.MediaChunk&gt;'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[4]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Source.Chunk.MediaChunk &gt;
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='BaseTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[4]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Source.Chunk.MediaChunk &gt;
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source.hls.playlist']/class[@name='HlsMediaPlaylist.Segment']/method[@name='compareTo' and count(parameter)=1 and parameter[1][@type='java.lang.Long']]/parameter[1]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.text']/class[@name='SubtitleOutputBuffer']/method[@name='release' and count(parameter)=0]"
        name="abstract"
        >
        false
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source.hls']/class[@name='HlsMediaSource.Factory']/method[@name='setStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;androidx.media2.exoplayer.external.offline.StreamKey&gt;']]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.Source.IMediaSourceFactory
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ProgressiveMediaSource.Factory']/method[@name='setStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]/parameter[1]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Offline.StreamKey &gt;
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ProgressiveMediaSource']/method[@name='releaseSourceInternal' and count(parameter)=0]"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='SingleSampleMediaSource']/method[@name='prepareSourceInternal' and count(parameter)=1 and parameter[1][@type='androidx.media2.exoplayer.external.upstream.TransferListener']]"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='SingleSampleMediaSource']/method[@name='releaseSourceInternal' and count(parameter)=0]"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='CompositeMediaSource']/method[@name='prepareSourceInternal' and count(parameter)=1 and parameter[1][@type='androidx.media2.exoplayer.external.upstream.TransferListener']]"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='CompositeMediaSource']/method[@name='releaseSourceInternal' and count(parameter)=0]"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='SilenceMediaSource']/method[@name='prepareSourceInternal' and count(parameter)=1 and parameter[1][@type='androidx.media2.exoplayer.external.upstream.TransferListener']]"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='SilenceMediaSource']/method[@name='releaseSourceInternal' and count(parameter)=0]"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ProgressiveMediaSource']/method[@name='prepareSourceInternal' and count(parameter)=1 and parameter[1][@type='androidx.media2.exoplayer.external.upstream.TransferListener']]"
        name="visibility"
        >
        public
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='DefaultDataSourceFactory']/method[@name='createDataSource' and count(parameter)=0]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.Upstream.IDataSource
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='DefaultDataSourceFactory']/method[@name='createDataSource' and count(parameter)=0]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.Upstream.IDataSource
    </attr>
    <!--
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='HttpDataSource.BaseFactory']/method[@name='createDataSource' and count(parameter)=0]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.Upstream.IDataSource
    </attr>
    -->
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='PriorityDataSourceFactory']/method[@name='createDataSource' and count(parameter)=0]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.Upstream.IDataSource
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/interface[@name='HttpDataSource.Factory']/method[@name='createDataSource' and count(parameter)=0]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.Upstream.IDataSource
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source.hls']/class[@name='HlsMediaSource.Factory']/method[@name='createMediaSource' and count(parameter)=1 and parameter[1][@type='android.net.Uri']]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.Source.IMediaSource
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ProgressiveMediaSource.Factory']/method[@name='createMediaSource' and count(parameter)=1 and parameter[1][@type='android.net.Uri']]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.Source.IMediaSource
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ExtractorMediaSource.Factory']/method[@name='createMediaSource' and count(parameter)=1 and parameter[1][@type='android.net.Uri']]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.Source.IMediaSource
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source.hls']/class[@name='HlsMediaSource']/method[@name='prepareSourceInternal' and count(parameter)=1 and parameter[1][@type='androidx.media2.exoplayer.external.upstream.TransferListener']]"
        name="visibility"
        >
        public
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source.hls']/class[@name='HlsMediaSource']/method[@name='releaseSourceInternal' and count(parameter)=0]"
        name="visibility"
        >
        public
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ProgressiveMediaSource.Factory']/method[@name='setStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]/parameter[1]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Offline.StreamKey &gt;
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='MaskingMediaPeriod']/method[@name='getStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]/parameter[1]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Trackselection.ITrackSelection &gt;
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='MaskingMediaPeriod']/method[@name='getStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]"
        name="managedReturn"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Offline.StreamKey &gt;
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='MaskingMediaPeriod']/method[@name='onContinueLoadingRequested' and count(parameter)=1 and parameter[1][@type='androidx.media2.exoplayer.external.source.MediaPeriod']]/parameter[1]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>


    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='LoopingMediaSource']/method[@name='onChildSourceInfoRefreshed' and count(parameter)=3 and parameter[1][@type='java.lang.Void'] and parameter[2][@type='androidx.media2.exoplayer.external.source.MediaSource'] and parameter[3][@type='androidx.media2.exoplayer.external.Timeline']]/parameter[1]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='MaskingMediaSource']/method[@name='onChildSourceInfoRefreshed' and count(parameter)=3 and parameter[1][@type='java.lang.Void'] and parameter[2][@type='androidx.media2.exoplayer.external.source.MediaSource'] and parameter[3][@type='androidx.media2.exoplayer.external.Timeline']]/parameter[1]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='MergingMediaSource']/method[@name='onChildSourceInfoRefreshed' and count(parameter)=3 and parameter[1][@type='java.lang.Integer'] and parameter[2][@type='androidx.media2.exoplayer.external.source.MediaSource'] and parameter[3][@type='androidx.media2.exoplayer.external.Timeline']]/parameter[1]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>


    <!--
        174 errors
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class/method"
        name="propertyName"></attr>

    -->

    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.analytics']/interface[@name='AnalyticsListener']/method[@name='onAudioAttributesChanged' and count(parameter)=2 and parameter[1][@type='androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime'] and parameter[2][@type='androidx.media2.exoplayer.external.audio.AudioAttributes']]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.analytics']/interface[@name='AnalyticsListener']/method[@name='onAudioSessionId' and count(parameter)=2 and parameter[1][@type='androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime'] and parameter[2][@type='int']]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.analytics']/interface[@name='AnalyticsListener']/method[@name='onSurfaceSizeChanged' and count(parameter)=3 and parameter[1][@type='androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.analytics']/interface[@name='AnalyticsListener']/method[@name='onVideoSizeChanged' and count(parameter)=5 and parameter[1][@type='androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime'] and parameter[2][@type='int'] and parameter[3][@type='int'] and parameter[4][@type='int'] and parameter[5][@type='float']]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.analytics']/interface[@name='AnalyticsListener']/method[@name='onVolumeChanged' and count(parameter)=2 and parameter[1][@type='androidx.media2.exoplayer.external.analytics.AnalyticsListener.EventTime'] and parameter[2][@type='float']]"
        />

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='MaskingMediaSource']/method[@name='createPeriod' and count(parameter)=3 and parameter[1][@type='androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId'] and parameter[2][@type='androidx.media2.exoplayer.external.upstream.Allocator'] and parameter[3][@type='long']]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.Source.IMediaPeriod
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='MaskingMediaSource']/method[@name='createPeriod' and count(parameter)=3 and parameter[1][@type='androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId'] and parameter[2][@type='androidx.media2.exoplayer.external.upstream.Allocator'] and parameter[3][@type='long']]/parameter[1]"
        name="managedType"
        >
        AndroidX.Media2.ExoPlayer.External.Source.MediaSourceMediaPeriodId
    </attr>

    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/interface[@name='MediaSource']/method[@name='createPeriod' and count(parameter)=3 and parameter[1][@type='androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId'] and parameter[2][@type='androidx.media2.exoplayer.external.upstream.Allocator'] and parameter[3][@type='long']]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.extractor']/class[@name='BinarySearchSeeker.BinarySearchSeekMap']/constructor[@name='BinarySearchSeeker.BinarySearchSeekMap' and count(parameter)=7 and parameter[1][@type='androidx.media2.exoplayer.external.extractor.BinarySearchSeeker.SeekTimestampConverter'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='long'] and parameter[5][@type='long'] and parameter[6][@type='long'] and parameter[7][@type='long']]"
        />

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.audio']/interface[@name='AudioRendererEventListener']/method[@name='onAudioSessionId' and count(parameter)=1 and parameter[1][@type='int']]"
        name="managedName"
        >
        OnAudioSessionId1
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source.ads']/class[@name='AdsMediaSource']/method[@name='onChildSourceInfoRefreshed' and count(parameter)=3 and parameter[1][@type='androidx.media2.exoplayer.external.source.MediaSource.MediaPeriodId'] and parameter[2][@type='androidx.media2.exoplayer.external.source.MediaSource'] and parameter[3][@type='androidx.media2.exoplayer.external.Timeline']]/parameter[1]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ClippingMediaSource']/method[@name='onChildSourceInfoRefreshed' and count(parameter)=3 and parameter[1][@type='java.lang.Void'] and parameter[2][@type='androidx.media2.exoplayer.external.source.MediaSource'] and parameter[3][@type='androidx.media2.exoplayer.external.Timeline']]/parameter[1]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='HttpDataSource.BaseFactory']/method[@name='createDataSource' and count(parameter)=0]"
        name="managedReturn"
        >
        AndroidX.Media2.ExoPlayer.External.Upstream.IDataSource
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ClippingMediaPeriod']/method[@name='onContinueLoadingRequested' and count(parameter)=1 and parameter[1][@type='androidx.media2.exoplayer.external.source.MediaPeriod']]/parameter[1]"
        name="managedType"
        >
        Java.Lang.Object
    </attr>
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/interface[@name='DataSource.Factory']/method[@name='createDataSource' and count(parameter)=0]"
        />
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ClippingMediaPeriod']/method[@name='getStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]"
        name="managedReturn"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Offline.StreamKey &gt;
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ClippingMediaPeriod']/method[@name='getStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]/parameter[1]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Trackselection.ITrackSelection &gt;
    </attr>


    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='DefaultHttpDataSourceFactory']/method[@name='createDataSourceInternal' and count(parameter)=1 and parameter[1][@type='androidx.media2.exoplayer.external.upstream.HttpDataSource.RequestProperties']]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='HttpDataSource.BaseFactory']/method[@name='createDataSourceInternal' and count(parameter)=1 and parameter[1][@type='androidx.media2.exoplayer.external.upstream.HttpDataSource.RequestProperties']]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='HttpDataSource.BaseFactory']/method[@name='createDataSourceInternal' and count(parameter)=1 and parameter[1][@type='androidx.media2.exoplayer.external.upstream.HttpDataSource.RequestProperties']]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='CompositeMediaSource']/method[@name='onChildSourceInfoRefreshed' and count(parameter)=3 and parameter[1][@type='T'] and parameter[2][@type='androidx.media2.exoplayer.external.source.MediaSource'] and parameter[3][@type='androidx.media2.exoplayer.external.Timeline']]"
        />
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.audio']/interface[@name='AudioSink.Listener']/method[@name='onAudioSessionId' and count(parameter)=1 and parameter[1][@type='int']]"
        name="managedName"
        >
        OnAudioSinkAudioSessionId
    </attr>

    <!--
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ExtractorMediaSource.Factory']/method[@name='setStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]/parameter[1]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Offline.StreamKey &gt;
    </attr>
    -->
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ExtractorMediaSource.Factory']/method[@name='setStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ExtractorMediaSource']"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.extractor']/interface[@name='ExtractorOutput']/method[@name='seekMap' and count(parameter)=1 and parameter[1][@type='androidx.media2.exoplayer.external.extractor.SeekMap']]"
        />
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='BaseTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[4]"
        name="managedType"
        >
        System.Collections.IList
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='AdaptiveTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List&lt;? extends androidx.media2.exoplayer.external.source.chunk.MediaChunk&gt;'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]/parameter[4]"
        name="managedType"
        >
        System.Collections.IList
    </attr>

    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='RandomTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List&lt;? extends androidx.media2.exoplayer.external.source.chunk.MediaChunk&gt;'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='AdaptiveTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List&lt;? extends androidx.media2.exoplayer.external.source.chunk.MediaChunk&gt;'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/class[@name='BaseTrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.trackselection']/interface[@name='TrackSelection']/method[@name='updateSelectedTrack' and count(parameter)=5 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='long'] and parameter[4][@type='java.util.List&lt;? extends androidx.media2.exoplayer.external.source.chunk.MediaChunk&gt;'] and parameter[5][@type='androidx.media2.exoplayer.external.source.chunk.MediaChunkIterator[]']]"
        />

    <!--
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ClippingMediaPeriod']/method[@name='getStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]"
        />
    -->
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ClippingMediaPeriod']/method[@name='getStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]/parameter[1]"
        name="managedType"
        >
        System.Collections.IList
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/interface[@name='MediaPeriod']/method[@name='getStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;androidx.media2.exoplayer.external.trackselection.TrackSelection&gt;']]/parameter[1]"
        name="managedType"
        >
        System.Collections.IList
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source.hls']/class[@name='HlsMediaPeriod']/method[@name='getStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;androidx.media2.exoplayer.external.trackselection.TrackSelection&gt;']]/parameter[1]"
        name="managedType"
        >
        System.Collections.IList
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='MaskingMediaPeriod']/method[@name='getStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]/parameter[1]"
        name="managedType"
        >
        System.Collections.IList
    </attr>




    <!--
        System.Collections.Generic.IDictionary &lt; string, System.Collections.Generic.IList &lt; string &gt; &gt;
    -->
    <!--
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/interface[@name='DataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        name="managedReturn"
        >
        System.Collections.IDictionary
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='BaseDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        name="managedReturn"
        >
        System.Collections.IDictionary
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='DummyDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        name="managedReturn"
        >
        System.Collections.IDictionary
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream.crypto']/class[@name='AesCipherDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        name="managedReturn"
        >
        System.Collections.IDictionary
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='DefaultDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        name="managedReturn"
        >
        System.Collections.IDictionary
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/interface[@name='HttpDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        name="managedReturn"
        >
        System.Collections.IDictionary
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='PriorityDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        name="managedReturn"
        >
        System.Collections.IDictionary
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='StatsDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        name="managedReturn"
        >
        System.Collections.IDictionary
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='TeeDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        name="managedReturn"
        >
        System.Collections.IDictionary
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='ResolvingDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        name="managedReturn"
        >
        System.Collections.IDictionary
    </attr>
    -->
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/interface[@name='DataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='BaseDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='DummyDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream.crypto']/class[@name='AesCipherDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='DefaultDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/interface[@name='HttpDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='PriorityDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='StatsDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='TeeDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.upstream']/class[@name='ResolvingDataSource']/method[@name='getResponseHeaders' and count(parameter)=0]"
        />
    <!--
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ProgressiveMediaSource.Factory']/method[@name='setStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]"
        />
    -->
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/interface[@name='MediaPeriod']/method[@name='getStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;androidx.media2.exoplayer.external.trackselection.TrackSelection&gt;']]/parameter[1]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Trackselection.ITrackSelection &gt;
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source.hls']/class[@name='HlsMediaPeriod']/method[@name='getStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;androidx.media2.exoplayer.external.trackselection.TrackSelection&gt;']]/parameter[1]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Trackselection.ITrackSelection &gt;
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ProgressiveMediaSource.Factory']/method[@name='setStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]/parameter[1]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Offline.StreamKey &gt;
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='MaskingMediaPeriod']/method[@name='getStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]/parameter[1]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Trackselection.ITrackSelection &gt;
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ClippingMediaPeriod']/method[@name='getStreamKeys' and count(parameter)=1 and parameter[1][@type='java.util.List']]/parameter[1]"
        name="managedType"
        >
        System.Collections.Generic.IList &lt; AndroidX.Media2.ExoPlayer.External.Trackselection.ITrackSelection &gt;
    </attr>

    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.source.hls.playlist']/class[@name='HlsPlaylist']"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ClippingMediaPeriod']"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='ProgressiveMediaSource']"
        />
    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.source']/class[@name='MaskingMediaPeriod']"
        />

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external']/interface[@name='Player.EventListener']/method[@name='onTimelineChanged' and count(parameter)=3 and parameter[1][@type='androidx.media2.exoplayer.external.Timeline'] and parameter[2][@type='java.lang.Object'] and parameter[3][@type='int']]"
        name="managedName"
        >
        OnTimelineChangedDeprecated
    </attr>
    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external']/class[@name='Player.DefaultEventListener']/method[@name='onTimelineChanged' and count(parameter)=3 and parameter[1][@type='androidx.media2.exoplayer.external.Timeline'] and parameter[2][@type='java.lang.Object'] and parameter[3][@type='int']]"
        name="managedName"
        >
        OnTimelineChangedDeprecated
    </attr>

    <attr
        path="/api/package[@name='androidx.media2.exoplayer.external.video']/interface[@name='VideoListener']/method[@name='onRenderedFirstFrame' and count(parameter)=0]"
        name="managedName"
        >
        OnRenderedFirstFrameVideoListener
    </attr>


    <remove-node
        path="/api/package[@name='androidx.media2.exoplayer.external.video']/interface[@name='VideoRendererEventListener']"
        />
    <remove-node
	    path="/api/package[@name='androidx.media2.exoplayer.external.audio']/interface[@name='AudioRendererEventListener']"
        />
    <remove-node 
        path="/api/package[@name='androidx.media2.exoplayer.external.analytics']/interface[@name='AnalyticsListener']"
        />
        
</metadata>
